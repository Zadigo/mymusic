{
	"info": {
		"_postman_id": "303a1688-27c5-4061-a99d-dd68162f73a3",
		"name": "Spotify",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8871030"
	},
	"item": [
		{
			"name": "Albums",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/artists/albums",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"artists",
						"albums"
					]
				}
			},
			"response": []
		},
		{
			"name": "Artist",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/artists/1",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"artists",
						"1"
					]
				},
				"description": "Get the details of a single artist"
			},
			"response": []
		},
		{
			"name": "Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('correct reult', function () {\r",
							"    pm.response.to.have.jsonBody('name')\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "jay",
							"type": "text"
						},
						{
							"key": "area",
							"value": "",
							"type": "text"
						},
						{
							"key": "genre",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/artists/search",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"artists",
						"search"
					]
				},
				"description": "Search for an artist in the database"
			},
			"response": []
		},
		{
			"name": "Genres",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('body content', function () {\r",
							"    pm.response.to.have.jsonBody([\r",
							"        {\r",
							"            \"id\": 0,\r",
							"            \"name\": \"Dancehall\",\r",
							"            \"viewname\": \"dancehall\"\r",
							"        }\r",
							"    ])\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/artists/genres",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"artists",
						"genres"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sort",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user_sort\": \"Genre\"\r\n}"
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/1/sort",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"1",
						"sort"
					]
				}
			},
			"response": []
		},
		{
			"name": "Playlists Explore",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/explore",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"explore"
					]
				}
			},
			"response": []
		},
		{
			"name": "Explore Genre",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/amapiano",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"amapiano"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://api.spotify.com/v1/playlists/2DH4TmpD02WiKdiebn1lr0/tracks?market=FR&fields=items(track(album, name, artists))&limit=100&offset=400",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer BQCjAocNstqww6GdeRV9TWVKCo-NUkRxSO2N-6tobuz1Alb23cQQJT5i1_3U1Uf0hRaTsliM9ukQpm70rbyVeV98ZqzDnCl-DRNyR9CIZdOk3dD9BVe-xvxzvrFbWj1sU2U7aCMKPvxwc5SPJ9wWz8NSg9bGxTUxdk1OofKwiUQJlfkpfr1U84KqwisZuw",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.spotify.com/v1/playlists/2DH4TmpD02WiKdiebn1lr0/tracks?market=FR&fields=items(track(album, name, artists))&limit=100&offset=100",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"playlists",
						"2DH4TmpD02WiKdiebn1lr0",
						"tracks"
					],
					"query": [
						{
							"key": "market",
							"value": "FR"
						},
						{
							"key": "fields",
							"value": "items(track(album, name, artists))"
						},
						{
							"key": "limit",
							"value": "100"
						},
						{
							"key": "offset",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User Playlists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('set the first playlist', () => {\r",
							"    const firstItem = pm.response.json()[0]\r",
							"    pm.environment.set('firstPlaylist', firstItem.id)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						""
					]
				},
				"description": "Returns playlists created by users of the application"
			},
			"response": []
		},
		{
			"name": "User Playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('set the first playlist', () => {\r",
							"    const firstItem = pm.response.json()[0]\r",
							"    pm.environment.set('firstPlaylist', firstItem.id)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/{{firstPlaylist}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"{{firstPlaylist}}"
					]
				},
				"description": "Returns playlists created by users of the application"
			},
			"response": []
		},
		{
			"name": "Add Song Playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('set the first playlist', () => {\r",
							"    const firstItem = pm.response.json()[0]\r",
							"    pm.environment.set('firstPlaylist', firstItem.id)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "song_id",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/{{firstPlaylist}}/add",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"{{firstPlaylist}}",
						"add"
					]
				},
				"description": "Returns playlists created by users of the application"
			},
			"response": []
		},
		{
			"name": "Remove Song Playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('set the first playlist', () => {\r",
							"    const firstItem = pm.response.json()[0]\r",
							"    pm.environment.set('firstPlaylist', firstItem.id)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "song_id",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/{{firstPlaylist}}/remove",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"{{firstPlaylist}}",
						"remove"
					]
				},
				"description": "Returns playlists created by users of the application"
			},
			"response": []
		},
		{
			"name": "Create User Playlist",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/create",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Choose playlist sort",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "user_sort",
							"value": "Duration",
							"description": "Album name, Song name, Artist name, Added or Duration",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/{{firstPlaylist}}/sort",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"{{firstPlaylist}}",
						"sort"
					]
				}
			},
			"response": []
		},
		{
			"name": "Merge Playlists",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "playlist_to_update",
							"value": "{{firstPlaylist}}",
							"description": "Playlist in which the songs will be merged",
							"type": "text"
						},
						{
							"key": "playlist_to_merge",
							"value": "2",
							"description": "Playlist to take the songs from",
							"type": "text"
						},
						{
							"key": "delete_on_merge",
							"value": "false",
							"description": "Whether to delete the original playlist after the merge",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/v1/playlists/merge",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"playlists",
						"merge"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test('set authorization token', () => {",
					"    var token = pm.environment.get('authenticationToken')",
					"",
					"    if (token) {",
					"        pm.request.headers.add({",
					"            key: 'Authorization',",
					"            value: `Token ${token}`",
					"        }) ",
					"    }",
					"",
					"    pm.request.headers.add({",
					"        key: 'Content-Type',",
					"        value: 'application/json'",
					"    })",
					"})"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}