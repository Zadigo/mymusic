{"version":3,"file":"static/js/4772.ee3568e1.js","mappings":"iSACEA,EAAAA,EAAAA,IAGM,OAHAC,OAAK,SAAGC,EAAAA,SAAQ,2BAAiCA,EAAAA,OAAM,4BAA7D,WACEC,EAAAA,EAAAA,GAAwK,SAAhKC,GAAIF,EAAAA,G,qCAAaG,EAAAA,MAAKC,GAAGL,OAAK,SAAEI,EAAAA,aAA6G,qBAA9FE,QAASF,EAAAA,MAAQG,KAAMH,EAAAA,aAAeI,KAAI,CAAIP,EAAAA,SAAQ,eAAsBQ,KAAMR,EAAAA,MAAzI,6BAAyBG,EAAAA,UACzBF,EAAAA,EAAAA,GAA6D,SAArDQ,IAAKT,EAAAA,GAAID,MAAM,qBAAvB,QAA6CC,EAAAA,OAAK,EAAAU,IAFpD,E,CASF,OACEF,KAAM,eACNG,MAAO,CACLT,GAAI,CACFI,KAAMM,OACNC,UAAU,GAKZC,OAAQ,CACNR,KAAMS,SAERC,SAAU,CACRV,KAAMS,QACNE,SAAS,GAEXC,QAAS,CACPZ,KAAMS,QACNE,SAAS,GAEXE,QAAS,CACPb,KAAMS,QACNE,SAAS,GAEXG,MAAO,CACLd,KAAMM,OACNC,UAAU,GAEZL,KAAM,CACJF,KAAMM,SAGVS,MAAO,CACL,mBACE,OAAO,CACT,GAEFC,QACE,MAAMC,GAAWC,EAAAA,EAAAA,IAAO,YAAY,KAAM,IAC1C,MAAO,CACLD,WAEH,EACDE,SAAU,CACRC,MAAO,CACLC,MACE,OAAOC,KAAKT,OACb,EACDU,IAAKH,GACHE,KAAKE,MAAM,iBAAkBJ,EAC/B,GAEFK,eACE,MAAO,CAILH,KAAKL,SAAW,OAAS,KAE5B,EACDS,eACE,OAAIJ,KAAKZ,UAAYY,KAAKV,SAEfU,KAAKZ,SADP,WAGEY,KAAKV,QACP,QAEA,UAEX,GAEFe,UACML,KAAKT,UACPS,KAAKF,OAAQ,EAEjB,G,QChFF,MAAMQ,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://frontend/./src/layouts/bootstrap/BaseCheckbox.vue","webpack://frontend/./src/layouts/bootstrap/BaseCheckbox.vue?e384"],"sourcesContent":["<template>\r\n  <div :class=\"[isSwitch ? 'form-switch' : 'form-check', inline ? 'form-check-inline' : null]\">\r\n    <input :id=\"id\" v-model=\"value\" :class=\"inputClasses\" :checked=\"value\" :type=\"checkboxType\" :role=\"[ isSwitch ? 'switch' : null]\" :name=\"name\" class=\"form-check-input\">\r\n    <label :for=\"id\" class=\"form-check-label\">{{ label }}</label>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject } from 'vue'\r\n\r\nexport default {\r\n  name: 'BaseCheckbox',\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    // bigger: {\r\n    //   type: Boolean\r\n    // },\r\n    inline: {\r\n      type: Boolean\r\n    },\r\n    isSwitch: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    isRadio: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    initial: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    name: {\r\n      type: String\r\n    }\r\n  },\r\n  emits: {\r\n    'update:initial' () {\r\n      return true\r\n    }\r\n  },\r\n  setup () {\r\n    const darkMode = inject('darkMode', () => false)\r\n    return {\r\n      darkMode\r\n    }\r\n  },\r\n  computed: {\r\n    value: {\r\n      get () {\r\n        return this.initial\r\n      },\r\n      set (value) {\r\n        this.$emit('update:initial', value)\r\n      }\r\n    },\r\n    inputClasses () {\r\n      return [\r\n        // {\r\n        //   'fs-input-bigger': this.bigger && !this.isSwitch,\r\n        // },\r\n        this.darkMode ? 'dark' : null\r\n      ]\r\n    },\r\n    checkboxType () {\r\n      if (this.isSwitch && this.isRadio) {\r\n        return 'checkbox'\r\n      } else if (this.isSwitch) {\r\n        return 'checkbox'\r\n      } else if (this.isRadio) {\r\n        return 'radio'\r\n      } else {\r\n        return 'checkbox'\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    if (this.initial) {\r\n      this.value = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-check-input.fs-input-bigger {\r\n  font-size: 1.375em;\r\n}\r\n</style>\r\n","import { render } from \"./BaseCheckbox.vue?vue&type=template&id=33c49228&scoped=true\"\nimport script from \"./BaseCheckbox.vue?vue&type=script&lang=js\"\nexport * from \"./BaseCheckbox.vue?vue&type=script&lang=js\"\n\nimport \"./BaseCheckbox.vue?vue&type=style&index=0&id=33c49228&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\mywebsites\\\\mymusic\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-33c49228\"]])\n\nexport default __exports__"],"names":["_createElementBlock","class","$props","_createElementVNode","id","$options","$event","checked","type","role","name","for","_hoisted_2","props","String","required","inline","Boolean","isSwitch","default","isRadio","initial","label","emits","setup","darkMode","inject","computed","value","get","this","set","$emit","inputClasses","checkboxType","mounted","__exports__","render"],"sourceRoot":""}