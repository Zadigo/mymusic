{"version":3,"file":"static/js/583.65b929b6.js","mappings":"6JAEA,MAAMA,GAAYC,EAAAA,EAAAA,IAAY,SAAU,CACtCC,MAAO,KAAM,CACXC,WAAW,EACXC,YAAa,CAAC,IAEhBC,QAAS,CACPC,KAAMC,GACJC,KAAKJ,YAAcG,EACnBC,KAAKL,WAAY,CAClB,EACDM,QACED,KAAKL,WAAY,CAClB,GAEHO,QAAS,CACPC,gBACE,OAAQJ,GACCA,EAAKK,OAASJ,KAAKJ,YAAYQ,IAEzC,I,+GCpBEC,MAAM,c,GAGFA,MAAM,sB,GAWNA,MAAM,a,iBASDC,KAAK,SAASD,MAAM,0B,GAIpBC,KAAK,SAASD,MAAM,0B,0GA3BlCE,EAAAA,EAAAA,IAgCM,MAhCN,EAgCM,gBA9BJA,EAAAA,EAAAA,IA6BIC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA7BcC,EAAAA,OAARX,K,WAAVQ,EAAAA,EAAAA,IA6BI,KA7BsBI,IAAKZ,EAAKa,GAAIC,KAAA,GAAKR,MAAM,8GAA+GS,QAAK,iCAAN,QAAc,eAA/K,EACEC,EAAAA,EAAAA,GASM,MATN,EASM,EARJA,EAAAA,EAAAA,GAGO,+BAFFhB,EAAKK,MAAO,IACf,IAAAY,EAAAA,EAAAA,IAAuDC,EAAA,CAApCC,KAAK,gBAAgBb,MAAM,YAGhDW,EAAAA,EAAAA,IAEcG,EAAA,CAFAC,GAAI,CAAAhB,KAAAA,cAAAiB,OAAAA,CAAAT,GAAAA,UAAkDP,MAAM,8BAA1E,C,kBACE,IAA4B,mBAAzBN,EAAKuB,MAAMC,OAAOnB,MAAI,M,KAD3B,SAKFW,EAAAA,EAAAA,GAgBM,MAhBN,EAgBM,CAfUS,EAAAA,WAAaA,EAAAA,MAAMrB,cAAcJ,KAApB,WAA3BQ,EAAAA,EAAAA,IAES,U,MAF6CD,KAAK,SAASD,MAAM,yBAA0BS,QAAK,oBAAEU,EAAAA,MAAMvB,OAAN,EAAAwB,MAAMxB,SAAK,KAAtH,EACEe,EAAAA,EAAAA,IAAgEC,EAAA,CAA7CC,KAAK,2BAD1B,WAIAX,EAAAA,EAAAA,IAES,U,MAFMD,KAAK,SAASD,MAAM,yBAA0BS,QAAK,GAAEU,EAAAA,MAAM1B,KAAKC,IAA/E,EACEiB,EAAAA,EAAAA,IAA+DC,EAAA,CAA5CC,KAAK,sBAD1B,OAIAH,EAAAA,EAAAA,GAES,SAFT,EAES,EADPC,EAAAA,EAAAA,IAAgEC,EAAA,CAA7CC,KAAK,yBAG1BH,EAAAA,EAAAA,GAES,SAFT,EAES,EADPC,EAAAA,EAAAA,IAA4EC,EAAA,CAAzDC,KAAK,2CA1B9B,O,yBAqCJ,GACEd,KAAM,qBACNsB,MAAO,CACLC,MAAO,CACLrB,KAAMsB,MACNC,QAAS,IAAM,KAGnBC,QACE,MAAML,GAAQjC,EAAAA,EAAAA,MACR,UAAEG,IAAcoC,EAAAA,EAAAA,IAAYN,GAClC,MAAO,CACLA,QACA9B,YAEJ,G,QChDF,MAAMqC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://frontend/./src/store/player.js","webpack://frontend/./src/layouts/BaseSongsListGroup.vue","webpack://frontend/./src/layouts/BaseSongsListGroup.vue?ddba"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\nconst usePlayer = defineStore('player', {\r\n  state: () => ({\r\n    isPlaying: false,\r\n    currentSong: {}\r\n  }),\r\n  actions: {\r\n    play (song) {\r\n      this.currentSong = song\r\n      this.isPlaying = true\r\n    },\r\n    pause () {\r\n      this.isPlaying = false\r\n    }\r\n  },\r\n  getters: {\r\n    isCurrentSong () {\r\n      return (song) => {\r\n        return song.name === this.currentSong.name\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport {\r\n  usePlayer\r\n}\r\n","<template>\r\n  <div class=\"list-group\">\r\n    <!-- TODO: Make this reusable componenent -->\r\n    <a v-for=\"song in songs\" :key=\"song.id\" href class=\"list-group-item list-group-item-action d-flex justify-content-between bg-dark text-light align-items-center\" @click.prevent>\r\n      <div class=\"d-flex flex-column\">\r\n        <span>\r\n          {{ song.name }}\r\n          <font-awesome-icon icon=\"fa-solid fa-e\" class=\"ms-3\" />\r\n        </span>\r\n\r\n        <router-link :to=\"{ name: 'artist_view', params: { id: 'nnoin' } }\" class=\"text-muted text-decoration\">\r\n          {{ song.album.artist.name }}\r\n        </router-link>\r\n      </div>\r\n\r\n      <div class=\"btn-group\">\r\n        <button v-if=\"isPlaying && store.isCurrentSong(song)\" type=\"button\" class=\"btn btn-primary btn-sm\" @click=\"store.pause\">\r\n          <font-awesome-icon icon=\"fa-solid fa-pause\"></font-awesome-icon>\r\n        </button>\r\n\r\n        <button v-else type=\"button\" class=\"btn btn-primary btn-sm\" @click=\"store.play(song)\">\r\n          <font-awesome-icon icon=\"fa-solid fa-play\"></font-awesome-icon>\r\n        </button>\r\n\r\n        <button type=\"button\" class=\"btn btn-primary btn-sm\">\r\n          <font-awesome-icon icon=\"fa-solid fa-heart\"></font-awesome-icon>\r\n        </button>\r\n\r\n        <button type=\"button\" class=\"btn btn-primary btn-sm\">\r\n          <font-awesome-icon icon=\"fa-solid fa-ellipsis-vertical\"></font-awesome-icon>\r\n        </button>\r\n      </div>\r\n    </a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { usePlayer } from '@/store/player'\r\nimport { storeToRefs } from 'pinia'\r\n\r\nexport default {\r\n  name: 'BaseSongsListGroup',\r\n  props: {\r\n    songs: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  setup () {\r\n    const store = usePlayer()\r\n    const { isPlaying } = storeToRefs(store)\r\n    return {\r\n      store,\r\n      isPlaying\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n  width: 40px;\r\n}\r\n</style>\r\n","import { render } from \"./BaseSongsListGroup.vue?vue&type=template&id=1cc4293f&scoped=true\"\nimport script from \"./BaseSongsListGroup.vue?vue&type=script&lang=js\"\nexport * from \"./BaseSongsListGroup.vue?vue&type=script&lang=js\"\n\nimport \"./BaseSongsListGroup.vue?vue&type=style&index=0&id=1cc4293f&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\mywebsites\\\\mymusic\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1cc4293f\"]])\n\nexport default __exports__"],"names":["usePlayer","defineStore","state","isPlaying","currentSong","actions","play","song","this","pause","getters","isCurrentSong","name","class","type","_createElementBlock","_Fragment","_renderList","$props","key","id","href","onClick","_createElementVNode","_createVNode","_component_font_awesome_icon","icon","_component_router_link","to","params","album","artist","$setup","store","props","songs","Array","default","setup","storeToRefs","__exports__","render"],"sourceRoot":""}