{"version":3,"file":"static/js/3416.59609c68.js","mappings":"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","sources":["webpack://frontend/./src/layouts/bootstrap/composables/index.js","webpack://frontend/./src/layouts/bootstrap/BaseDropdownButton.vue","webpack://frontend/./src/layouts/bootstrap/BaseDropdownButton.vue?91de"],"sourcesContent":["import _ from 'lodash'\r\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue'\r\n\r\nexport function useClickOutside (actionType, onbefore = () => { }, onafter = () => { }) {\r\n  const show = ref(false)\r\n  const action = actionType\r\n  action\r\n  function handleButtonClickOutside (e) {\r\n    const target = e.target\r\n\r\n    onbefore(e)\r\n\r\n    if (target.classList.contains('dropdown-header')) {\r\n      return\r\n    }\r\n\r\n    if (target.classList.contains('dropdown-divider')) {\r\n      return\r\n    }\r\n\r\n    if (!target.classList.contains('dropdown-toggle')) {\r\n      show.value = false\r\n    }\r\n    \r\n    onafter(e)\r\n  }\r\n\r\n  function toggleShow() {\r\n    show.value = !show.value\r\n  }\r\n\r\n  onMounted(() => {\r\n    window.addEventListener('click', handleButtonClickOutside)\r\n  })\r\n\r\n  onBeforeUnmount(() => {\r\n    window.removeEventListener('click', handleButtonClickOutside)\r\n  })\r\n\r\n  return {\r\n    show,\r\n    toggleShow\r\n  }\r\n}\r\n\r\nexport function useLists (items, onbefore = () => { }, onafter = () => { }) {\r\n  const _items = items\r\n  const selectedIds = ref([])\r\n\r\n  // const emit = defineEmits({\r\n  //   'list-click' () {\r\n  //     return true\r\n  //   }\r\n  // })\r\n\r\n  function selectionManager (item) {\r\n    if (selectedIds.value.includes(item)) {\r\n      const index = _.indexOf(selectedIds.value, item)\r\n      selectedIds.value.splice(index, 1)\r\n    } else {\r\n      selectedIds.value.push(item)\r\n    }\r\n    // return items\r\n  }\r\n\r\n  const selected = computed(() => {\r\n    return selectedIds.value.map((id) => {\r\n      return _items[id]\r\n    })\r\n  })\r\n\r\n  function selectItem (e, index) {\r\n    onbefore(e)\r\n    selectionManager(index)\r\n    onafter(e)\r\n    // emit('list-click', selected.value)\r\n  }\r\n\r\n  function isSelected (index) {\r\n    return selectedIds.value.includes(index)\r\n  }\r\n  \r\n  return {\r\n    isSelected,\r\n    selected,\r\n    selectedIds,\r\n    selectItem\r\n  }\r\n}\r\n","<template>\r\n  <!-- dropdown-center dropup dropend dropstart -->\r\n  <!-- btn-group -->\r\n  <div ref=\"link\" class=\"dropdown\">\r\n    <button :id=\"id\" :class=\"buttonClasses\" :aria-expanded=\"show\" class=\"btn dropdown-toggle\" type=\"button\" @click=\"toggleShow\">\r\n      <!-- <span v-if=\"icon\" :class=\"{ [`mdi-${icon}`]: true }\" class=\"mdi me-2\"></span> -->\r\n      <font-awesome-icon v-if=\"icon\" :icon=\"`fa-solid fa-${item.icon}`\" class=\"me-2\" />\r\n      {{ buttonName }}\r\n    </button>\r\n\r\n    <!-- <button :class=\"buttonClasses\" :aria-expanded=\"show\" type=\"button\" class=\"btn dropdown-toggle dropdown-toggle-split\" @click=\"toggleShow\">\r\n      <span class=\"visually-hidden\">Toggle Dropdown</span>\r\n    </button> -->\r\n\r\n    <!-- :name=\"animation\" -->\r\n    <transition :name=\"animation\" mode=\"in-out\">\r\n      <!-- dropdown-menu-end -->\r\n      <ul v-if=\"show\" :class=\"{show, 'dropdown-menu-dark': darkMode}\" :aria-labelledby=\"id\" class=\"dropdown-menu p-2\">\r\n        <!-- <form class=\"p-2 mb-2 bg-light border-bottom\">\r\n          <input type=\"search\" class=\"form-control\" autocomplete=\"false\" placeholder=\"Type to filter...\">\r\n        </form> -->\r\n\r\n        <template v-for=\"(item, i) in items\" :key=\"item.name\">\r\n          <li>\r\n            <h6 v-if=\"item.header\" class=\"dropdown-header rounded-2\">{{ item.name }}</h6>\r\n            <hr v-else-if=\"item.divider\" class=\"dropdown-divider\">\r\n            <a v-else :class=\"showActive && selected === i ? 'active' : null\" class=\"dropdown-item rounded-2\" href @click.prevent=\"dropdownClick(i, item)\">\r\n              <font-awesome-icon v-if=\"item.icon\" :icon=\"`fa-solid fa-${item.icon}`\" class=\"me-2\" />\r\n              <!-- <span v-if=\"item.icon\" :class=\"{ [`mdi-${item.icon}`]: true }\" class=\"mdi me-2\"></span> -->\r\n              {{ item.name }}\r\n            </a>\r\n          </li>\r\n        </template>\r\n      </ul>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, inject } from 'vue'\r\nimport { useClickOutside } from './composables/index'\r\n\r\nexport default {\r\n  name: 'BaseDropdownButton',\r\n  props: {\r\n    animation: {\r\n      type: String,\r\n      default: 'slideup'\r\n    },\r\n    buttonName: {\r\n      type: String\r\n    },\r\n    color: {\r\n      type: String,\r\n      default: 'primary'\r\n    },\r\n    id: {\r\n      type: String\r\n    },\r\n    icon: {\r\n      type: String\r\n    },\r\n    items: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    showActive: {\r\n      type: Boolean\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: 'md'\r\n    }\r\n  },\r\n  emits: {\r\n    'dropdown-click' () {\r\n      return true\r\n    },\r\n    'dropdown-closed' () {\r\n      return true\r\n    },\r\n    'dropdown-opened' () {\r\n      return true\r\n    }\r\n  },\r\n  setup () {\r\n    const target = ref(null)\r\n    const { show, toggleShow } = useClickOutside(target)\r\n    const darkMode = inject('darkMode', false)\r\n    const buttonWidth = 0\r\n    return {\r\n      buttonWidth,\r\n      darkMode,\r\n      show,\r\n      target,\r\n      toggleShow\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      selected: 0\r\n    }\r\n  },\r\n  computed: {\r\n    buttonClasses () {\r\n      return [\r\n        this.show ? 'show' : null,\r\n        {\r\n          [`btn-${this.size}`]: true,\r\n          [`btn-${this.color}`]: true\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  watch: {\r\n    show (current) {\r\n      if (!current) {\r\n        this.$emit('dropdown-closed')\r\n      } else {\r\n        this.$emit('dropdown-opened')\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.target = this.$refs.link\r\n    // const dropdown = this.$refs.drop\r\n    // const button = dropdown.querySelector('button')\r\n    this.buttonWidth = this.$refs.link.offsetWidth\r\n    // this.$refs.link.style.animation = `${this.animation} .3s ease`\r\n  },\r\n  methods: {\r\n    dropdownClick (index, item) {\r\n      this.selected = index\r\n      this.toggleShow()\r\n      this.$emit('dropdown-click', [index, item])\r\n    }\r\n  } \r\n}  \r\n</script>\r\n\r\n<style scoped>\r\n.scale-enter-active,\r\n.scale-leave-active {\r\n  position: absolute;\r\n  transition: all .3s ease;\r\n  margin: 0px;\r\n}\r\n\r\n.scale-enter-from,\r\n.scale-leave-to {\r\n  opacity: 0;\r\n  transform: scale(.9, .9);\r\n}\r\n\r\n.scale-enter-to,\r\n.scale-leave-from {\r\n  opacity: 1;\r\n  transform: scale(1, 1);\r\n}\r\n\r\n.slide-enter-active,\r\n.slide-leave-active {\r\n  position: absolute;\r\n  transition: all .3s ease;\r\n  margin: 0px;\r\n}\r\n\r\n.slide-enter-from,\r\n.slide-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(-15px);\r\n}\r\n\r\n.slide-enter-to,\r\n.slide-leave-from {\r\n  opacity: 1;\r\n  transform: translateX(0px);\r\n}\r\n\r\n.slideup-enter-active,\r\n.slideup-leave-active {\r\n  position: absolute;\r\n  transition: all .3s ease;\r\n  margin: 0px;\r\n}\r\n\r\n.slideup-enter-from,\r\n.slideup-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(15px);\r\n}\r\n\r\n.slideup-enter-to,\r\n.slideup-leave-from {\r\n  opacity: 1;\r\n  transform: translateY(0px);\r\n}\r\n\r\n.dropdown-divider {\r\n  height: 0;\r\n  margin: 0.5rem 0;\r\n  overflow: hidden;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.175) !important;\r\n  opacity: 1;\r\n}\r\n\r\n.dropdown-item.active,\r\n.dropdown-item:active {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #0d6efd;\r\n}\r\n</style>\r\n","import { render } from \"./BaseDropdownButton.vue?vue&type=template&id=dbfbf7f2&scoped=true\"\nimport script from \"./BaseDropdownButton.vue?vue&type=script&lang=js\"\nexport * from \"./BaseDropdownButton.vue?vue&type=script&lang=js\"\n\nimport \"./BaseDropdownButton.vue?vue&type=style&index=0&id=dbfbf7f2&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\mywebsites\\\\mymusic\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dbfbf7f2\"]])\n\nexport default __exports__"],"names":["useClickOutside","actionType","onbefore","onafter","show","ref","handleButtonClickOutside","e","target","classList","contains","value","toggleShow","onMounted","window","addEventListener","onBeforeUnmount","removeEventListener","useLists","items","_items","selectedIds","selectionManager","item","includes","index","_","splice","push","selected","computed","map","id","selectItem","isSelected","class","_createElementBlock","_createElementVNode","$props","$options","$setup","type","onClick","_createBlock","_component_font_awesome_icon","icon","_ctx","_toDisplayString","_createVNode","_Transition","name","mode","_Fragment","_renderList","i","header","divider","$data","href","props","animation","String","default","buttonName","color","Array","required","showActive","Boolean","size","emits","setup","darkMode","inject","buttonWidth","data","buttonClasses","this","watch","current","$emit","mounted","$refs","link","offsetWidth","methods","dropdownClick","__exports__","render"],"sourceRoot":""}