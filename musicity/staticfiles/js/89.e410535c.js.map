{"version":3,"file":"static/js/89.e410535c.js","mappings":"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","sources":["webpack://frontend/./src/layouts/bootstrap/composables/index.js","webpack://frontend/./src/layouts/bootstrap/BaseAccordion.vue","webpack://frontend/./src/layouts/bootstrap/BaseAccordion.vue?703d"],"sourcesContent":["import _ from 'lodash'\r\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue'\r\n\r\nexport function useClickOutside (actionType, onbefore = () => { }, onafter = () => { }) {\r\n  const show = ref(false)\r\n  const action = actionType\r\n  action\r\n  function handleButtonClickOutside (e) {\r\n    const target = e.target\r\n\r\n    onbefore(e)\r\n\r\n    if (target.classList.contains('dropdown-header')) {\r\n      return\r\n    }\r\n\r\n    if (target.classList.contains('dropdown-divider')) {\r\n      return\r\n    }\r\n\r\n    if (!target.classList.contains('dropdown-toggle')) {\r\n      show.value = false\r\n    }\r\n    \r\n    onafter(e)\r\n  }\r\n\r\n  function toggleShow() {\r\n    show.value = !show.value\r\n  }\r\n\r\n  onMounted(() => {\r\n    window.addEventListener('click', handleButtonClickOutside)\r\n  })\r\n\r\n  onBeforeUnmount(() => {\r\n    window.removeEventListener('click', handleButtonClickOutside)\r\n  })\r\n\r\n  return {\r\n    show,\r\n    toggleShow\r\n  }\r\n}\r\n\r\nexport function useLists (items, onbefore = () => { }, onafter = () => { }) {\r\n  const _items = items\r\n  const selectedIds = ref([])\r\n\r\n  // const emit = defineEmits({\r\n  //   'list-click' () {\r\n  //     return true\r\n  //   }\r\n  // })\r\n\r\n  function selectionManager (item) {\r\n    if (selectedIds.value.includes(item)) {\r\n      const index = _.indexOf(selectedIds.value, item)\r\n      selectedIds.value.splice(index, 1)\r\n    } else {\r\n      selectedIds.value.push(item)\r\n    }\r\n    // return items\r\n  }\r\n\r\n  const selected = computed(() => {\r\n    return selectedIds.value.map((id) => {\r\n      return _items[id]\r\n    })\r\n  })\r\n\r\n  function selectItem (e, index) {\r\n    onbefore(e)\r\n    selectionManager(index)\r\n    onafter(e)\r\n    // emit('list-click', selected.value)\r\n  }\r\n\r\n  function isSelected (index) {\r\n    return selectedIds.value.includes(index)\r\n  }\r\n  \r\n  return {\r\n    isSelected,\r\n    selected,\r\n    selectedIds,\r\n    selectItem\r\n  }\r\n}\r\n","<template>\r\n  <div :id=\"'accordionExample'\" ref=\"link\" :class=\"{'border-dark': darkMode}\" class=\"accordion\">\r\n    <div v-for=\"(item, i) in items\" :key=\"i\" class=\"accordion-item\">\r\n      <h2 id=\"headingOne\" class=\"accordion-header\">\r\n        <button :class=\"{ collapsed: !isSelected(i), 'bg-dark text-light': darkMode}\" :aria-expanded=\"isSelected(i)\" :aria-controls=\"`collapse-${i}`\" class=\"accordion-button\" type=\"button\" @click=\"selectItem($event, i)\">\r\n          {{ item.title }}\r\n        </button>\r\n      </h2>\r\n      <!-- v-if=\"isSelected(i)\" -->\r\n      <div :id=\"`collapse-${i}`\" :class=\"{show: isSelected(i), 'bg-dark text-light': darkMode}\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\">\r\n        <div class=\"accordion-body\">\r\n          {{ item.content }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCurrentInstance, inject } from 'vue'\r\nimport { useLists } from './composables/index'\r\n\r\nexport default {\r\n  name: 'BaseAccordion',\r\n  props: {\r\n    items: {\r\n      type: Array\r\n    }\r\n  },\r\n  emits: {\r\n    click () {\r\n      return true\r\n    }\r\n  },\r\n  setup () {\r\n    const target = null\r\n    const app = getCurrentInstance()\r\n\r\n    // function collapsing (e) {\r\n    //   const id = e.target.attributes.getNamedItem('id').value\r\n    //   const collapse = target.querySelector(`#${id}`)\r\n    //   collapse.classList.remove('collapse')\r\n    //   collapse.classList.add('collapsing')\r\n    //   setTimeout(() => {\r\n    //     collapse.classList.remove('collapsing')\r\n    //     collapse.classList.add('collapse')\r\n    //   }, 1000);\r\n    // }\r\n\r\n    const { selectItem, selectedIds, selected, isSelected } = useLists(app.props.items)\r\n    const darkMode = inject('darkMode', false)\r\n    return {\r\n      target,\r\n      darkMode,\r\n      isSelected,\r\n      selectItem,\r\n      selectedIds,\r\n      selected\r\n    }\r\n  },\r\n  mounted () {\r\n    this.target = this.$refs.link\r\n  }\r\n  // data () {\r\n  //   return {\r\n  //     computedItems: []\r\n  //   }\r\n  // },\r\n  // beforeMount () {\r\n  //   this.computedItems = this.items.map((item) => {\r\n  //     item.show = false\r\n  //     return item\r\n  //   })\r\n  // },\r\n  // methods: {\r\n  //   expandItem (item) {\r\n  //     item.show = !item.show\r\n  //     this.$emit('click', item)\r\n  //   }\r\n  // }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.border-dark {\r\n  border-color: #373b3e;\r\n}\r\n</style>\r\n","import { render } from \"./BaseAccordion.vue?vue&type=template&id=4f4e793e&scoped=true\"\nimport script from \"./BaseAccordion.vue?vue&type=script&lang=js\"\nexport * from \"./BaseAccordion.vue?vue&type=script&lang=js\"\n\nimport \"./BaseAccordion.vue?vue&type=style&index=0&id=4f4e793e&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\mywebsites\\\\mymusic\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4f4e793e\"]])\n\nexport default __exports__"],"names":["useClickOutside","actionType","onbefore","onafter","show","ref","handleButtonClickOutside","e","target","classList","contains","value","toggleShow","onMounted","window","addEventListener","onBeforeUnmount","removeEventListener","useLists","items","_items","selectedIds","selectionManager","item","includes","index","_","splice","push","selected","computed","map","id","selectItem","isSelected","class","_createElementBlock","$setup","_Fragment","_renderList","$props","i","key","_createElementVNode","collapsed","type","onClick","$event","title","_hoisted_2","_toDisplayString","content","name","props","Array","emits","click","setup","app","getCurrentInstance","darkMode","inject","mounted","this","$refs","link","__exports__","render"],"sourceRoot":""}